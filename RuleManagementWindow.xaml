<Window x:Class="AbakConfigurator.RuleManagementWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AbakConfigurator"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        Title="{DynamicResource l_SecureRuleManagement_Title}" Height="600" MinHeight="500" Width="800" MinWidth="600"
        WindowStartupLocation="CenterOwner" WindowStyle="SingleBorderWindow">
    <FrameworkElement.Resources>
        <local:EntryTypeToVisibilityConverter x:Key="EntryTypeToVisibilityConverter"/>
        <local:StringToBooleanConverter x:Key="StringToBooleanConverter"/>
        <Style x:Key="GroupTitle" TargetType="{x:Type TextBlock}"/>
        <Style x:Key="GroupDescription" TargetType="{x:Type TextBlock}"/>
        <Style x:Key="RuleTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
            <Setter Property="TextBlock.FontSize" Value="12"/>
        </Style>
        <Style x:Key="RuleDescription" TargetType="{x:Type TextBlock}"/>
        <Style x:Key="RuleValue" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="Placeholder">
                                <Border BorderBrush="Red" BorderThickness="1">
                                    <UIElement.Effect>
                                        <DropShadowEffect ShadowDepth="0" Color="Red"/>
                                    </UIElement.Effect>
                                </Border>
                            </AdornedElementPlaceholder>
                            <TextBlock FontSize="11" FontWeight="SemiBold" Margin="0,2,0,0" Foreground="Red" Text="{Binding ElementName=Placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </FrameworkElement.Resources>
    <Grid Margin="10,0,10,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ListView SelectionChanged="GroupList_SelectionChanged" x:Name="GroupList" Grid.Row="0"
                  SelectionMode="Single" ItemsSource="{Binding RuleStore.Groups}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="5">
                                <StackPanel Orientation="Horizontal" Margin="3">
                                    <TextBlock x:Name="ChangedMark" Visibility="Collapsed" Margin="0,0,3,0" Style="{StaticResource GroupTitle}"><Bold>*</Bold></TextBlock>
                                    <TextBlock Style="{StaticResource GroupTitle}" Text="{Binding Name}"/>
                                </StackPanel>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Value="True" Binding="{Binding Changed}">
                                    <Setter TargetName="ChangedMark" Property="UIElement.Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="False" Binding="{Binding Changed}">
                                    <Setter TargetName="ChangedMark" Property="UIElement.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ListView>
            </Grid>
            <ListView SelectionChanged="RuleList_SelectionChanged" x:Name="RuleList" Grid.Column="1" Margin="10,0,0,0"
                SelectionMode="Single" ItemsSource="{Binding RuleStore.SelectedGroup.Rules}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="5,5,0,5">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="ChangedMark" Visibility="Collapsed" Margin="0,0,3,0" Style="{StaticResource RuleTitle}"><Bold>*</Bold></TextBlock>
                                <TextBlock Style="{StaticResource RuleTitle}" Text="{Binding Title}"/>
                            </StackPanel>
                            <TextBlock Style="{StaticResource RuleDescription}" Text="{Binding Description}"/>
                            <ToggleButton x:Name="RuleValueToggleButton" Style="{StaticResource SwitchTypeToggleButton}" Width="50"
                            Height="20" Margin="0,5,0,15" HorizontalAlignment="Left" VerticalAlignment="Center"
                            IsChecked="{Binding Value, Mode=TwoWay, Converter={StaticResource StringToBooleanConverter}}"
                            Visibility="{Binding Type, Converter={StaticResource EntryTypeToVisibilityConverter}, ConverterParameter=ToggleButton}"
                                          Click="RuleValueToggleButton_Click"
                                          GotFocus="RuleValueToggleButton_GotFocus"/>
                            <TextBox x:Name="RuleValueInput" Style="{StaticResource RuleValue}" Margin="0,5,0,15" Height="25"
                       MaxLength="25" HorizontalAlignment="Left" VerticalAlignment="Center"
                       VerticalContentAlignment="Center" Width="200" Text="{Binding Value, Mode=TwoWay}"
                                     TextChanged="RuleValueInput_TextChanged"
                                     GotFocus="RuleValueInput_GotFocus"
                       Visibility="{Binding Type, Converter={StaticResource EntryTypeToVisibilityConverter}, ConverterParameter=TextBox}">
                                <i:Interaction.Behaviors>
                                    <local:EntryInputBehavior Type="{Binding Type}"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Value="True" Binding="{Binding Changed}">
                                <Setter TargetName="ChangedMark" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Value="False" Binding="{Binding Changed}">
                                <Setter TargetName="ChangedMark" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListView>
        </Grid>
        <WrapPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right">
            <Button Click="SaveButton_Click" x:Name="SaveButton" Width="120" Content="Сохранить" Margin="0,0,10,0" IsEnabled="{Binding Changed}"/>
            <Button Click="CancelButton_Click" x:Name="CancelButton" Width="120" Content="Отмена" Margin="0"/>
        </WrapPanel>
    </Grid>
</Window>
