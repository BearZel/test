<Application x:Class="AbakConfigurator.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    StartupUri="MainWindow.xaml"
    ShutdownMode="OnMainWindowClose"
    Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            
            <LinearGradientBrush x:Key="UnPressed"
                         StartPoint="0.499,0" EndPoint="0.501,1">
                <GradientStop Color="#AAA" Offset="0" />
                <GradientStop Color="#DDD" Offset="0.01" />
                <GradientStop Color="#AAA" Offset="0.99" />
                <GradientStop Color="#888" Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="Pressed"
                         StartPoint="0.499,0" EndPoint="0.501,1">
                <GradientStop Color="#888" Offset="1" />
                <GradientStop Color="#888" Offset="1" />
                <GradientStop Color="#888" Offset="1" />
                <GradientStop Color="#888" Offset="1" />
            </LinearGradientBrush>
            
            <LinearGradientBrush x:Key="ControlBackground_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FFDCDCDC" Offset="0.50"/>
            <GradientStop Color="#FFADADAD" Offset="0.50"/>
            <GradientStop Color="#FFD4D4D4" Offset="1"/>
        </LinearGradientBrush>
            <Style x:Key="SwitchTypeToggleButton"
       TargetType="{x:Type ToggleButton}">

                <Style.Resources>
                    <Color x:Key="Color.Additional.LightGrey">#D3D3D3</Color>
                    <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
                    <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
                    <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>

                    <Style x:Key="ToggleButtonContentTextbox"
               TargetType="TextBlock">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                    </Style>
                    <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                         Color="{StaticResource Color.Additional.LightGrey}" />
                    <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                         Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
                    <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                         Color="{StaticResource Color.Additional.MediumGrey}" />
                    <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                         Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
                    <TextBlock x:Key="OffContent"
                   Style="{StaticResource ToggleButtonContentTextbox}"
                   Text="Off" />
                    <Style x:Key="OnContentControl"
               TargetType="ContentControl">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                    <Style x:Key="OffContentControl"
               TargetType="ContentControl">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>

                </Style.Resources>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="MainRow">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="TopRow" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Ellipse x:Name="BackgroundEllipse1"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Left"
                                 Fill="{StaticResource ToggleButtonTrueBackground}" />
                                    <Ellipse x:Name="BackgroundEllipse2"
                                 Grid.Row="0"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Right"
                                 Fill="{StaticResource ToggleButtonFalseBackground}" />
                                    <Border x:Name="BackgroundBorder"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Background="{StaticResource ToggleButtonTrueBackground}" />
                                </Grid>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="AnimationWidth" />
                                        <ColumnDefinition Width="{Binding ElementName=MainRow,
                        Path=ActualHeight}" />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="AnimationSizeBorder"
                                Grid.Column="0" />
                                    <ContentControl Grid.Column="0"
                                        Style="{StaticResource OnContentControl}" />
                                </Grid>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding ElementName=MainRow,
                Path=ActualHeight}" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <ContentControl Grid.Column="1"
                                        Style="{StaticResource OffContentControl}" />
                                </Grid>
                                <Grid Background="Transparent">
                                    <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                                        <Border Width="{Binding ElementName=AnimationSizeBorder,
                Path=ActualWidth}" />
                                        <Ellipse x:Name="ForegroundEllipse"
                                     Width="{Binding ElementName=MainRow,
                                                     Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow,
                                                      Path=ActualHeight}"
                                     HorizontalAlignment="Right"
                                     Fill="{StaticResource ToggleButtonTrueForeground}" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="BackgroundBorder" Property="Background"
                Value="{StaticResource ToggleButtonFalseBackground}" />
                                    <Setter TargetName="ForegroundEllipse" Property="Fill"
                Value="{StaticResource ToggleButtonFalseForeground}" />
                                    <!--<Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName
                        ="AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        To="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>

                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName=
                        "AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        From="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>-->
                                    <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Width" Value="80" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="0,5,5,5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource Pressed}"/>
                        <Setter Property="BorderThickness" Value="2, 2, 2, 2"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="False">
                        <Setter Property="BorderBrush" Value="{StaticResource UnPressed}"/>
                        <Setter Property="BorderThickness" Value="1.5, 1.5, 3, 3"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.3"/>
                    </Trigger>
                    <!--<Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>-->
                </Style.Triggers>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/lang.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
<!--<Style.Triggers>
    <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="Silver"/>
        <Setter Property="BorderBrush" Value="{StaticResource UnPressedButton}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Trigger>
    <Trigger Property="IsMouseOver" Value="False">
        <Setter Property="Background" Value="Gainsboro"/>
        <Setter Property="BorderBrush" Value="{StaticResource UnPressedButton}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Trigger>
    <Trigger Property="IsPressed" Value="False">
        <Setter Property="BorderThickness" Value="2"/>
    </Trigger>
    <Trigger Property="IsPressed" Value="True">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource PressedButton}"/>
    </Trigger>

    <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.3"/>
    </Trigger>
    -->
<!--<Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>-->
<!--
</Style.Triggers>
</Style>-->